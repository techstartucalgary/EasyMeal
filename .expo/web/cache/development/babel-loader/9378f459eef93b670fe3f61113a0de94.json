{"ast":null,"code":"'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { AnimatedEvent, attachNativeEvent } from \"./AnimatedEvent\";\nimport AnimatedAddition from \"./nodes/AnimatedAddition\";\nimport AnimatedDiffClamp from \"./nodes/AnimatedDiffClamp\";\nimport AnimatedDivision from \"./nodes/AnimatedDivision\";\nimport AnimatedInterpolation from \"./nodes/AnimatedInterpolation\";\nimport AnimatedModulo from \"./nodes/AnimatedModulo\";\nimport AnimatedMultiplication from \"./nodes/AnimatedMultiplication\";\nimport AnimatedNode from \"./nodes/AnimatedNode\";\nimport AnimatedProps from \"./nodes/AnimatedProps\";\nimport AnimatedSubtraction from \"./nodes/AnimatedSubtraction\";\nimport AnimatedTracking from \"./nodes/AnimatedTracking\";\nimport AnimatedValue from \"./nodes/AnimatedValue\";\nimport AnimatedValueXY from \"./nodes/AnimatedValueXY\";\nimport DecayAnimation from \"./animations/DecayAnimation\";\nimport SpringAnimation from \"./animations/SpringAnimation\";\nimport TimingAnimation from \"./animations/TimingAnimation\";\nimport createAnimatedComponent from \"./createAnimatedComponent\";\n\nvar add = function add(a, b) {\n  return new AnimatedAddition(a, b);\n};\n\nvar subtract = function subtract(a, b) {\n  return new AnimatedSubtraction(a, b);\n};\n\nvar divide = function divide(a, b) {\n  return new AnimatedDivision(a, b);\n};\n\nvar multiply = function multiply(a, b) {\n  return new AnimatedMultiplication(a, b);\n};\n\nvar modulo = function modulo(a, modulus) {\n  return new AnimatedModulo(a, modulus);\n};\n\nvar diffClamp = function diffClamp(a, min, max) {\n  return new AnimatedDiffClamp(a, min, max);\n};\n\nvar _combineCallbacks = function _combineCallbacks(callback, config) {\n  if (callback && config.onComplete) {\n    return function () {\n      config.onComplete && config.onComplete.apply(config, arguments);\n      callback && callback.apply(void 0, arguments);\n    };\n  } else {\n    return callback || config.onComplete;\n  }\n};\n\nvar maybeVectorAnim = function maybeVectorAnim(value, config, anim) {\n  if (value instanceof AnimatedValueXY) {\n    var configX = _objectSpread({}, config);\n\n    var configY = _objectSpread({}, config);\n\n    for (var key in config) {\n      var _config$key = config[key],\n          x = _config$key.x,\n          y = _config$key.y;\n\n      if (x !== undefined && y !== undefined) {\n        configX[key] = x;\n        configY[key] = y;\n      }\n    }\n\n    var aX = anim(value.x, configX);\n    var aY = anim(value.y, configY);\n    return parallel([aX, aY], {\n      stopTogether: false\n    });\n  }\n\n  return null;\n};\n\nvar spring = function spring(value, config) {\n  var _start = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, SpringAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new SpringAnimation(singleConfig), callback);\n    }\n  };\n\n  return maybeVectorAnim(value, config, spring) || {\n    start: function start(callback) {\n      _start(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n\n      _start(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar timing = function timing(value, config) {\n  var _start2 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, TimingAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new TimingAnimation(singleConfig), callback);\n    }\n  };\n\n  return maybeVectorAnim(value, config, timing) || {\n    start: function start(callback) {\n      _start2(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n\n      _start2(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar decay = function decay(value, config) {\n  var _start3 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    singleValue.animate(new DecayAnimation(singleConfig), callback);\n  };\n\n  return maybeVectorAnim(value, config, decay) || {\n    start: function start(callback) {\n      _start3(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n\n      _start3(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar sequence = function sequence(animations) {\n  var current = 0;\n  return {\n    start: function start(callback) {\n      var onComplete = function onComplete(result) {\n        if (!result.finished) {\n          callback && callback(result);\n          return;\n        }\n\n        current++;\n\n        if (current === animations.length) {\n          callback && callback(result);\n          return;\n        }\n\n        animations[current].start(onComplete);\n      };\n\n      if (animations.length === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        animations[current].start(onComplete);\n      }\n    },\n    stop: function stop() {\n      if (current < animations.length) {\n        animations[current].stop();\n      }\n    },\n    reset: function reset() {\n      animations.forEach(function (animation, idx) {\n        if (idx <= current) {\n          animation.reset();\n        }\n      });\n      current = 0;\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.sequence animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n};\n\nvar parallel = function parallel(animations, config) {\n  var doneCount = 0;\n  var hasEnded = {};\n  var stopTogether = !(config && config.stopTogether === false);\n  var result = {\n    start: function start(callback) {\n      if (doneCount === animations.length) {\n        callback && callback({\n          finished: true\n        });\n        return;\n      }\n\n      animations.forEach(function (animation, idx) {\n        var cb = function cb(endResult) {\n          hasEnded[idx] = true;\n          doneCount++;\n\n          if (doneCount === animations.length) {\n            doneCount = 0;\n            callback && callback(endResult);\n            return;\n          }\n\n          if (!endResult.finished && stopTogether) {\n            result.stop();\n          }\n        };\n\n        if (!animation) {\n          cb({\n            finished: true\n          });\n        } else {\n          animation.start(cb);\n        }\n      });\n    },\n    stop: function stop() {\n      animations.forEach(function (animation, idx) {\n        !hasEnded[idx] && animation.stop();\n        hasEnded[idx] = true;\n      });\n    },\n    reset: function reset() {\n      animations.forEach(function (animation, idx) {\n        animation.reset();\n        hasEnded[idx] = false;\n        doneCount = 0;\n      });\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.parallel animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n  return result;\n};\n\nvar delay = function delay(time) {\n  return timing(new AnimatedValue(0), {\n    toValue: 0,\n    delay: time,\n    duration: 0,\n    useNativeDriver: false\n  });\n};\n\nvar stagger = function stagger(time, animations) {\n  return parallel(animations.map(function (animation, i) {\n    return sequence([delay(time * i), animation]);\n  }));\n};\n\nvar loop = function loop(animation, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$iterations = _ref.iterations,\n      iterations = _ref$iterations === void 0 ? -1 : _ref$iterations,\n      _ref$resetBeforeItera = _ref.resetBeforeIteration,\n      resetBeforeIteration = _ref$resetBeforeItera === void 0 ? true : _ref$resetBeforeItera;\n\n  var isFinished = false;\n  var iterationsSoFar = 0;\n  return {\n    start: function start(callback) {\n      var restart = function restart(result) {\n        if (result === void 0) {\n          result = {\n            finished: true\n          };\n        }\n\n        if (isFinished || iterationsSoFar === iterations || result.finished === false) {\n          callback && callback(result);\n        } else {\n          iterationsSoFar++;\n          resetBeforeIteration && animation.reset();\n          animation.start(restart);\n        }\n      };\n\n      if (!animation || iterations === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        if (animation._isUsingNativeDriver()) {\n          animation._startNativeLoop(iterations);\n        } else {\n          restart();\n        }\n      }\n    },\n    stop: function stop() {\n      isFinished = true;\n      animation.stop();\n    },\n    reset: function reset() {\n      iterationsSoFar = 0;\n      isFinished = false;\n      animation.reset();\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.loop animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return animation._isUsingNativeDriver();\n    }\n  };\n};\n\nfunction forkEvent(event, listener) {\n  if (!event) {\n    return listener;\n  } else if (event instanceof AnimatedEvent) {\n    event.__addListener(listener);\n\n    return event;\n  } else {\n    return function () {\n      typeof event === 'function' && event.apply(void 0, arguments);\n      listener.apply(void 0, arguments);\n    };\n  }\n}\n\nfunction unforkEvent(event, listener) {\n  if (event && event instanceof AnimatedEvent) {\n    event.__removeListener(listener);\n  }\n}\n\nvar event = function event(argMapping, config) {\n  var animatedEvent = new AnimatedEvent(argMapping, config);\n\n  if (animatedEvent.__isNative) {\n    return animatedEvent;\n  } else {\n    return animatedEvent.__getHandler();\n  }\n};\n\nexport default {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay: decay,\n  timing: timing,\n  spring: spring,\n  add: add,\n  subtract: subtract,\n  divide: divide,\n  multiply: multiply,\n  modulo: modulo,\n  diffClamp: diffClamp,\n  delay: delay,\n  sequence: sequence,\n  parallel: parallel,\n  stagger: stagger,\n  loop: loop,\n  event: event,\n  createAnimatedComponent: createAnimatedComponent,\n  attachNativeEvent: attachNativeEvent,\n  forkEvent: forkEvent,\n  unforkEvent: unforkEvent,\n  Event: AnimatedEvent,\n  __PropsOnlyForTests: AnimatedProps\n};","map":{"version":3,"sources":["/Users/nemanjagrujic/Desktop/Projects 2022/EasyMeal/node_modules/react-native-web/dist/vendor/react-native/Animated/AnimatedImplementation.js"],"names":["_objectSpread","AnimatedEvent","attachNativeEvent","AnimatedAddition","AnimatedDiffClamp","AnimatedDivision","AnimatedInterpolation","AnimatedModulo","AnimatedMultiplication","AnimatedNode","AnimatedProps","AnimatedSubtraction","AnimatedTracking","AnimatedValue","AnimatedValueXY","DecayAnimation","SpringAnimation","TimingAnimation","createAnimatedComponent","add","a","b","subtract","divide","multiply","modulo","modulus","diffClamp","min","max","_combineCallbacks","callback","config","onComplete","arguments","maybeVectorAnim","value","anim","configX","configY","key","_config$key","x","y","undefined","aX","aY","parallel","stopTogether","spring","_start","start","animatedValue","configuration","singleValue","singleConfig","stopTracking","toValue","track","animate","stop","stopAnimation","reset","resetAnimation","_startNativeLoop","iterations","_isUsingNativeDriver","useNativeDriver","timing","_start2","decay","_start3","sequence","animations","current","result","finished","length","forEach","animation","idx","Error","doneCount","hasEnded","cb","endResult","delay","time","duration","stagger","map","i","loop","_temp","_ref","_ref$iterations","_ref$resetBeforeItera","resetBeforeIteration","isFinished","iterationsSoFar","restart","forkEvent","event","listener","__addListener","unforkEvent","__removeListener","argMapping","animatedEvent","__isNative","__getHandler","Value","ValueXY","Interpolation","Node","Event","__PropsOnlyForTests"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { AnimatedEvent, attachNativeEvent } from './AnimatedEvent';\nimport AnimatedAddition from './nodes/AnimatedAddition';\nimport AnimatedDiffClamp from './nodes/AnimatedDiffClamp';\nimport AnimatedDivision from './nodes/AnimatedDivision';\nimport AnimatedInterpolation from './nodes/AnimatedInterpolation';\nimport AnimatedModulo from './nodes/AnimatedModulo';\nimport AnimatedMultiplication from './nodes/AnimatedMultiplication';\nimport AnimatedNode from './nodes/AnimatedNode';\nimport AnimatedProps from './nodes/AnimatedProps';\nimport AnimatedSubtraction from './nodes/AnimatedSubtraction';\nimport AnimatedTracking from './nodes/AnimatedTracking';\nimport AnimatedValue from './nodes/AnimatedValue';\nimport AnimatedValueXY from './nodes/AnimatedValueXY';\nimport DecayAnimation from './animations/DecayAnimation';\nimport SpringAnimation from './animations/SpringAnimation';\nimport TimingAnimation from './animations/TimingAnimation';\nimport createAnimatedComponent from './createAnimatedComponent';\n\nvar add = function add(a, b) {\n  return new AnimatedAddition(a, b);\n};\n\nvar subtract = function subtract(a, b) {\n  return new AnimatedSubtraction(a, b);\n};\n\nvar divide = function divide(a, b) {\n  return new AnimatedDivision(a, b);\n};\n\nvar multiply = function multiply(a, b) {\n  return new AnimatedMultiplication(a, b);\n};\n\nvar modulo = function modulo(a, modulus) {\n  return new AnimatedModulo(a, modulus);\n};\n\nvar diffClamp = function diffClamp(a, min, max) {\n  return new AnimatedDiffClamp(a, min, max);\n};\n\nvar _combineCallbacks = function _combineCallbacks(callback, config) {\n  if (callback && config.onComplete) {\n    return function () {\n      config.onComplete && config.onComplete(...arguments);\n      callback && callback(...arguments);\n    };\n  } else {\n    return callback || config.onComplete;\n  }\n};\n\nvar maybeVectorAnim = function maybeVectorAnim(value, config, anim) {\n  if (value instanceof AnimatedValueXY) {\n    var configX = _objectSpread({}, config);\n\n    var configY = _objectSpread({}, config);\n\n    for (var key in config) {\n      var _config$key = config[key],\n          x = _config$key.x,\n          y = _config$key.y;\n\n      if (x !== undefined && y !== undefined) {\n        configX[key] = x;\n        configY[key] = y;\n      }\n    }\n\n    var aX = anim(value.x, configX);\n    var aY = anim(value.y, configY); // We use `stopTogether: false` here because otherwise tracking will break\n    // because the second animation will get stopped before it can update.\n\n    return parallel([aX, aY], {\n      stopTogether: false\n    });\n  }\n\n  return null;\n};\n\nvar spring = function spring(value, config) {\n  var _start = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, SpringAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new SpringAnimation(singleConfig), callback);\n    }\n  };\n\n  return maybeVectorAnim(value, config, spring) || {\n    start: function start(callback) {\n      _start(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations\n      });\n\n      _start(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar timing = function timing(value, config) {\n  var _start2 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, TimingAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new TimingAnimation(singleConfig), callback);\n    }\n  };\n\n  return maybeVectorAnim(value, config, timing) || {\n    start: function start(callback) {\n      _start2(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations\n      });\n\n      _start2(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar decay = function decay(value, config) {\n  var _start3 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    singleValue.animate(new DecayAnimation(singleConfig), callback);\n  };\n\n  return maybeVectorAnim(value, config, decay) || {\n    start: function start(callback) {\n      _start3(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations\n      });\n\n      _start3(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar sequence = function sequence(animations) {\n  var current = 0;\n  return {\n    start: function start(callback) {\n      var onComplete = function onComplete(result) {\n        if (!result.finished) {\n          callback && callback(result);\n          return;\n        }\n\n        current++;\n\n        if (current === animations.length) {\n          callback && callback(result);\n          return;\n        }\n\n        animations[current].start(onComplete);\n      };\n\n      if (animations.length === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        animations[current].start(onComplete);\n      }\n    },\n    stop: function stop() {\n      if (current < animations.length) {\n        animations[current].stop();\n      }\n    },\n    reset: function reset() {\n      animations.forEach((animation, idx) => {\n        if (idx <= current) {\n          animation.reset();\n        }\n      });\n      current = 0;\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.sequence animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n};\n\nvar parallel = function parallel(animations, config) {\n  var doneCount = 0; // Make sure we only call stop() at most once for each animation\n\n  var hasEnded = {};\n  var stopTogether = !(config && config.stopTogether === false);\n  var result = {\n    start: function start(callback) {\n      if (doneCount === animations.length) {\n        callback && callback({\n          finished: true\n        });\n        return;\n      }\n\n      animations.forEach((animation, idx) => {\n        var cb = function cb(endResult) {\n          hasEnded[idx] = true;\n          doneCount++;\n\n          if (doneCount === animations.length) {\n            doneCount = 0;\n            callback && callback(endResult);\n            return;\n          }\n\n          if (!endResult.finished && stopTogether) {\n            result.stop();\n          }\n        };\n\n        if (!animation) {\n          cb({\n            finished: true\n          });\n        } else {\n          animation.start(cb);\n        }\n      });\n    },\n    stop: function stop() {\n      animations.forEach((animation, idx) => {\n        !hasEnded[idx] && animation.stop();\n        hasEnded[idx] = true;\n      });\n    },\n    reset: function reset() {\n      animations.forEach((animation, idx) => {\n        animation.reset();\n        hasEnded[idx] = false;\n        doneCount = 0;\n      });\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.parallel animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n  return result;\n};\n\nvar delay = function delay(time) {\n  // Would be nice to make a specialized implementation\n  return timing(new AnimatedValue(0), {\n    toValue: 0,\n    delay: time,\n    duration: 0,\n    useNativeDriver: false\n  });\n};\n\nvar stagger = function stagger(time, animations) {\n  return parallel(animations.map((animation, i) => {\n    return sequence([delay(time * i), animation]);\n  }));\n};\n\nvar loop = function loop(animation, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$iterations = _ref.iterations,\n      iterations = _ref$iterations === void 0 ? -1 : _ref$iterations,\n      _ref$resetBeforeItera = _ref.resetBeforeIteration,\n      resetBeforeIteration = _ref$resetBeforeItera === void 0 ? true : _ref$resetBeforeItera;\n\n  var isFinished = false;\n  var iterationsSoFar = 0;\n  return {\n    start: function start(callback) {\n      var restart = function restart(result) {\n        if (result === void 0) {\n          result = {\n            finished: true\n          };\n        }\n\n        if (isFinished || iterationsSoFar === iterations || result.finished === false) {\n          callback && callback(result);\n        } else {\n          iterationsSoFar++;\n          resetBeforeIteration && animation.reset();\n          animation.start(restart);\n        }\n      };\n\n      if (!animation || iterations === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        if (animation._isUsingNativeDriver()) {\n          animation._startNativeLoop(iterations);\n        } else {\n          restart(); // Start looping recursively on the js thread\n        }\n      }\n    },\n    stop: function stop() {\n      isFinished = true;\n      animation.stop();\n    },\n    reset: function reset() {\n      iterationsSoFar = 0;\n      isFinished = false;\n      animation.reset();\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.loop animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return animation._isUsingNativeDriver();\n    }\n  };\n};\n\nfunction forkEvent(event, listener) {\n  if (!event) {\n    return listener;\n  } else if (event instanceof AnimatedEvent) {\n    event.__addListener(listener);\n\n    return event;\n  } else {\n    return function () {\n      typeof event === 'function' && event(...arguments);\n      listener(...arguments);\n    };\n  }\n}\n\nfunction unforkEvent(event, listener) {\n  if (event && event instanceof AnimatedEvent) {\n    event.__removeListener(listener);\n  }\n}\n\nvar event = function event(argMapping, config) {\n  var animatedEvent = new AnimatedEvent(argMapping, config);\n\n  if (animatedEvent.__isNative) {\n    return animatedEvent;\n  } else {\n    return animatedEvent.__getHandler();\n  }\n};\n/**\n * The `Animated` library is designed to make animations fluid, powerful, and\n * easy to build and maintain. `Animated` focuses on declarative relationships\n * between inputs and outputs, with configurable transforms in between, and\n * simple `start`/`stop` methods to control time-based animation execution.\n * If additional transforms are added, be sure to include them in\n * AnimatedMock.js as well.\n *\n * See https://reactnative.dev/docs/animated.html\n */\n\n\nexport default {\n  /**\n   * Standard value class for driving animations.  Typically initialized with\n   * `new Animated.Value(0);`\n   *\n   * See https://reactnative.dev/docs/animated.html#value\n   */\n  Value: AnimatedValue,\n\n  /**\n   * 2D value class for driving 2D animations, such as pan gestures.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html\n   */\n  ValueXY: AnimatedValueXY,\n\n  /**\n   * Exported to use the Interpolation type in flow.\n   *\n   * See https://reactnative.dev/docs/animated.html#interpolation\n   */\n  Interpolation: AnimatedInterpolation,\n\n  /**\n   * Exported for ease of type checking. All animated values derive from this\n   * class.\n   *\n   * See https://reactnative.dev/docs/animated.html#node\n   */\n  Node: AnimatedNode,\n\n  /**\n   * Animates a value from an initial velocity to zero based on a decay\n   * coefficient.\n   *\n   * See https://reactnative.dev/docs/animated.html#decay\n   */\n  decay,\n\n  /**\n   * Animates a value along a timed easing curve. The Easing module has tons of\n   * predefined curves, or you can use your own function.\n   *\n   * See https://reactnative.dev/docs/animated.html#timing\n   */\n  timing,\n\n  /**\n   * Animates a value according to an analytical spring model based on\n   * damped harmonic oscillation.\n   *\n   * See https://reactnative.dev/docs/animated.html#spring\n   */\n  spring,\n\n  /**\n   * Creates a new Animated value composed from two Animated values added\n   * together.\n   *\n   * See https://reactnative.dev/docs/animated.html#add\n   */\n  add,\n\n  /**\n   * Creates a new Animated value composed by subtracting the second Animated\n   * value from the first Animated value.\n   *\n   * See https://reactnative.dev/docs/animated.html#subtract\n   */\n  subtract,\n\n  /**\n   * Creates a new Animated value composed by dividing the first Animated value\n   * by the second Animated value.\n   *\n   * See https://reactnative.dev/docs/animated.html#divide\n   */\n  divide,\n\n  /**\n   * Creates a new Animated value composed from two Animated values multiplied\n   * together.\n   *\n   * See https://reactnative.dev/docs/animated.html#multiply\n   */\n  multiply,\n\n  /**\n   * Creates a new Animated value that is the (non-negative) modulo of the\n   * provided Animated value.\n   *\n   * See https://reactnative.dev/docs/animated.html#modulo\n   */\n  modulo,\n\n  /**\n   * Create a new Animated value that is limited between 2 values. It uses the\n   * difference between the last value so even if the value is far from the\n   * bounds it will start changing when the value starts getting closer again.\n   *\n   * See https://reactnative.dev/docs/animated.html#diffclamp\n   */\n  diffClamp,\n\n  /**\n   * Starts an animation after the given delay.\n   *\n   * See https://reactnative.dev/docs/animated.html#delay\n   */\n  delay,\n\n  /**\n   * Starts an array of animations in order, waiting for each to complete\n   * before starting the next. If the current running animation is stopped, no\n   * following animations will be started.\n   *\n   * See https://reactnative.dev/docs/animated.html#sequence\n   */\n  sequence,\n\n  /**\n   * Starts an array of animations all at the same time. By default, if one\n   * of the animations is stopped, they will all be stopped. You can override\n   * this with the `stopTogether` flag.\n   *\n   * See https://reactnative.dev/docs/animated.html#parallel\n   */\n  parallel,\n\n  /**\n   * Array of animations may run in parallel (overlap), but are started in\n   * sequence with successive delays.  Nice for doing trailing effects.\n   *\n   * See https://reactnative.dev/docs/animated.html#stagger\n   */\n  stagger,\n\n  /**\n   * Loops a given animation continuously, so that each time it reaches the\n   * end, it resets and begins again from the start.\n   *\n   * See https://reactnative.dev/docs/animated.html#loop\n   */\n  loop,\n\n  /**\n   * Takes an array of mappings and extracts values from each arg accordingly,\n   * then calls `setValue` on the mapped outputs.\n   *\n   * See https://reactnative.dev/docs/animated.html#event\n   */\n  event,\n\n  /**\n   * Make any React component Animatable.  Used to create `Animated.View`, etc.\n   *\n   * See https://reactnative.dev/docs/animated.html#createanimatedcomponent\n   */\n  createAnimatedComponent,\n\n  /**\n   * Imperative API to attach an animated value to an event on a view. Prefer\n   * using `Animated.event` with `useNativeDrive: true` if possible.\n   *\n   * See https://reactnative.dev/docs/animated.html#attachnativeevent\n   */\n  attachNativeEvent,\n\n  /**\n   * Advanced imperative API for snooping on animated events that are passed in\n   * through props. Use values directly where possible.\n   *\n   * See https://reactnative.dev/docs/animated.html#forkevent\n   */\n  forkEvent,\n  unforkEvent,\n\n  /**\n   * Expose Event class, so it can be used as a type for type checkers.\n   */\n  Event: AnimatedEvent,\n  __PropsOnlyForTests: AnimatedProps\n};"]},"metadata":{},"sourceType":"module"}