{"ast":null,"code":"import canUseDOM from \"../../../modules/canUseDom\";\nimport createCSSStyleSheet from \"./createCSSStyleSheet\";\nimport createOrderedCSSStyleSheet from \"./createOrderedCSSStyleSheet\";\nvar defaultId = 'react-native-stylesheet';\nvar roots = new WeakMap();\nvar sheets = [];\nvar initialRules = ['html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:rgba(0,0,0,0);}', 'body{margin:0;}', 'button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}', 'input::-webkit-search-cancel-button,input::-webkit-search-decoration,input::-webkit-search-results-button,input::-webkit-search-results-decoration{display:none;}'];\nexport function createSheet(root, id) {\n  if (id === void 0) {\n    id = defaultId;\n  }\n\n  var sheet;\n\n  if (canUseDOM) {\n    var rootNode = root != null ? root.getRootNode() : document;\n\n    if (sheets.length === 0) {\n      sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id));\n      initialRules.forEach(function (rule) {\n        sheet.insert(rule, 0);\n      });\n      roots.set(rootNode, sheets.length);\n      sheets.push(sheet);\n    } else {\n      var index = roots.get(rootNode);\n\n      if (index == null) {\n        var initialSheet = sheets[0];\n        var textContent = initialSheet != null ? initialSheet.getTextContent() : '';\n        sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id, rootNode, textContent));\n        roots.set(rootNode, sheets.length);\n        sheets.push(sheet);\n      } else {\n        sheet = sheets[index];\n      }\n    }\n  } else {\n    if (sheets.length === 0) {\n      sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id));\n      initialRules.forEach(function (rule) {\n        sheet.insert(rule, 0);\n      });\n      sheets.push(sheet);\n    } else {\n      sheet = sheets[0];\n    }\n  }\n\n  return {\n    getTextContent: function getTextContent() {\n      return sheet.getTextContent();\n    },\n    id: id,\n    insert: function insert(cssText, groupValue) {\n      sheets.forEach(function (s) {\n        s.insert(cssText, groupValue);\n      });\n    }\n  };\n}","map":{"version":3,"sources":["/Users/nemanjagrujic/Desktop/Projects 2022/EasyMeal/node_modules/react-native-web/dist/exports/StyleSheet/dom/index.js"],"names":["canUseDOM","createCSSStyleSheet","createOrderedCSSStyleSheet","defaultId","roots","WeakMap","sheets","initialRules","createSheet","root","id","sheet","rootNode","getRootNode","document","length","forEach","rule","insert","set","push","index","get","initialSheet","textContent","getTextContent","cssText","groupValue","s"],"mappings":"AAQA,OAAOA,SAAP;AACA,OAAOC,mBAAP;AACA,OAAOC,0BAAP;AACA,IAAIC,SAAS,GAAG,yBAAhB;AACA,IAAIC,KAAK,GAAG,IAAIC,OAAJ,EAAZ;AACA,IAAIC,MAAM,GAAG,EAAb;AACA,IAAIC,YAAY,GAAG,CACnB,0GADmB,EACyF,iBADzF,EAEnB,uEAFmB,EAEsD,mKAFtD,CAAnB;AAGA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,EAA3B,EAA+B;AACpC,MAAIA,EAAE,KAAK,KAAK,CAAhB,EAAmB;AACjBA,IAAAA,EAAE,GAAGP,SAAL;AACD;;AAED,MAAIQ,KAAJ;;AAEA,MAAIX,SAAJ,EAAe;AACb,QAAIY,QAAQ,GAAGH,IAAI,IAAI,IAAR,GAAeA,IAAI,CAACI,WAAL,EAAf,GAAoCC,QAAnD;;AAEA,QAAIR,MAAM,CAACS,MAAP,KAAkB,CAAtB,EAAyB;AACvBJ,MAAAA,KAAK,GAAGT,0BAA0B,CAACD,mBAAmB,CAACS,EAAD,CAApB,CAAlC;AACAH,MAAAA,YAAY,CAACS,OAAb,CAAqB,UAAAC,IAAI,EAAI;AAC3BN,QAAAA,KAAK,CAACO,MAAN,CAAaD,IAAb,EAAmB,CAAnB;AACD,OAFD;AAGAb,MAAAA,KAAK,CAACe,GAAN,CAAUP,QAAV,EAAoBN,MAAM,CAACS,MAA3B;AACAT,MAAAA,MAAM,CAACc,IAAP,CAAYT,KAAZ;AACD,KAPD,MAOO;AACL,UAAIU,KAAK,GAAGjB,KAAK,CAACkB,GAAN,CAAUV,QAAV,CAAZ;;AAEA,UAAIS,KAAK,IAAI,IAAb,EAAmB;AACjB,YAAIE,YAAY,GAAGjB,MAAM,CAAC,CAAD,CAAzB;AAEA,YAAIkB,WAAW,GAAGD,YAAY,IAAI,IAAhB,GAAuBA,YAAY,CAACE,cAAb,EAAvB,GAAuD,EAAzE;AAEAd,QAAAA,KAAK,GAAGT,0BAA0B,CAACD,mBAAmB,CAACS,EAAD,EAAKE,QAAL,EAAeY,WAAf,CAApB,CAAlC;AACApB,QAAAA,KAAK,CAACe,GAAN,CAAUP,QAAV,EAAoBN,MAAM,CAACS,MAA3B;AACAT,QAAAA,MAAM,CAACc,IAAP,CAAYT,KAAZ;AACD,OARD,MAQO;AACLA,QAAAA,KAAK,GAAGL,MAAM,CAACe,KAAD,CAAd;AACD;AACF;AACF,GAzBD,MAyBO;AAEL,QAAIf,MAAM,CAACS,MAAP,KAAkB,CAAtB,EAAyB;AACvBJ,MAAAA,KAAK,GAAGT,0BAA0B,CAACD,mBAAmB,CAACS,EAAD,CAApB,CAAlC;AACAH,MAAAA,YAAY,CAACS,OAAb,CAAqB,UAAAC,IAAI,EAAI;AAC3BN,QAAAA,KAAK,CAACO,MAAN,CAAaD,IAAb,EAAmB,CAAnB;AACD,OAFD;AAGAX,MAAAA,MAAM,CAACc,IAAP,CAAYT,KAAZ;AACD,KAND,MAMO;AACLA,MAAAA,KAAK,GAAGL,MAAM,CAAC,CAAD,CAAd;AACD;AACF;;AAED,SAAO;AACLmB,IAAAA,cADK,4BACY;AACf,aAAOd,KAAK,CAACc,cAAN,EAAP;AACD,KAHI;AAKLf,IAAAA,EAAE,EAAFA,EALK;AAOLQ,IAAAA,MAPK,kBAOEQ,OAPF,EAOWC,UAPX,EAOuB;AAC1BrB,MAAAA,MAAM,CAACU,OAAP,CAAe,UAAAY,CAAC,EAAI;AAClBA,QAAAA,CAAC,CAACV,MAAF,CAASQ,OAAT,EAAkBC,UAAlB;AACD,OAFD;AAGD;AAXI,GAAP;AAcD","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport canUseDOM from '../../../modules/canUseDom';\nimport createCSSStyleSheet from './createCSSStyleSheet';\nimport createOrderedCSSStyleSheet from './createOrderedCSSStyleSheet';\nvar defaultId = 'react-native-stylesheet';\nvar roots = new WeakMap();\nvar sheets = [];\nvar initialRules = [// minimal top-level reset\n'html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:rgba(0,0,0,0);}', 'body{margin:0;}', // minimal form pseudo-element reset\n'button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}', 'input::-webkit-search-cancel-button,input::-webkit-search-decoration,input::-webkit-search-results-button,input::-webkit-search-results-decoration{display:none;}'];\nexport function createSheet(root, id) {\n  if (id === void 0) {\n    id = defaultId;\n  }\n\n  var sheet;\n\n  if (canUseDOM) {\n    var rootNode = root != null ? root.getRootNode() : document; // Create the initial style sheet\n\n    if (sheets.length === 0) {\n      sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id));\n      initialRules.forEach(rule => {\n        sheet.insert(rule, 0);\n      });\n      roots.set(rootNode, sheets.length);\n      sheets.push(sheet);\n    } else {\n      var index = roots.get(rootNode);\n\n      if (index == null) {\n        var initialSheet = sheets[0]; // If we're creating a new sheet, populate it with existing styles\n\n        var textContent = initialSheet != null ? initialSheet.getTextContent() : ''; // Cast rootNode to 'any' because Flow types for getRootNode are wrong\n\n        sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id, rootNode, textContent));\n        roots.set(rootNode, sheets.length);\n        sheets.push(sheet);\n      } else {\n        sheet = sheets[index];\n      }\n    }\n  } else {\n    // Create the initial style sheet\n    if (sheets.length === 0) {\n      sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id));\n      initialRules.forEach(rule => {\n        sheet.insert(rule, 0);\n      });\n      sheets.push(sheet);\n    } else {\n      sheet = sheets[0];\n    }\n  }\n\n  return {\n    getTextContent() {\n      return sheet.getTextContent();\n    },\n\n    id,\n\n    insert(cssText, groupValue) {\n      sheets.forEach(s => {\n        s.insert(cssText, groupValue);\n      });\n    }\n\n  };\n}"]},"metadata":{},"sourceType":"module"}