{"ast":null,"code":"import { EventEmitter } from \"../EventEmitter\";\nimport Platform from \"../Platform\";\nimport NativeErrorManager from \"./NativeErrorManager\";\n\nif (__DEV__ && Platform.OS === 'android' && NativeErrorManager) {\n  var onNewException = 'ExpoModulesCoreErrorManager.onNewException';\n  var eventEmitter = new EventEmitter(NativeErrorManager);\n  eventEmitter.addListener(onNewException, function (_ref) {\n    var message = _ref.message;\n    console.error(message);\n  });\n}","map":{"version":3,"sources":["../../src/sweet/setUpErrorManager.fx.ts"],"names":[],"mappings":"AAAA,SAAS,YAAT;AACA,OAAO,QAAP;AACA,OAAO,kBAAP;;AAEA,IAAI,OAAO,IAAI,QAAQ,CAAC,EAAT,KAAgB,SAA3B,IAAwC,kBAA5C,EAAgE;AAC9D,MAAM,cAAc,GAAG,4CAAvB;AACA,MAAM,YAAY,GAAG,IAAI,YAAJ,CAAiB,kBAAjB,CAArB;AAEA,EAAA,YAAY,CAAC,WAAb,CAAyB,cAAzB,EAAyC,gBAAqC;AAAA,QAAlC,OAAkC,QAAlC,OAAkC;AAC5E,IAAA,OAAO,CAAC,KAAR,CAAc,OAAd;AACD,GAFD;AAGD","sourcesContent":["import { EventEmitter } from '../EventEmitter';\nimport Platform from '../Platform';\nimport NativeErrorManager from './NativeErrorManager';\n\nif (__DEV__ && Platform.OS === 'android' && NativeErrorManager) {\n  const onNewException = 'ExpoModulesCoreErrorManager.onNewException';\n  const eventEmitter = new EventEmitter(NativeErrorManager);\n\n  eventEmitter.addListener(onNewException, ({ message }: { message: string }) => {\n    console.error(message);\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}